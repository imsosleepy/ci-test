name: ci-cd demo

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 소스코드 가져오기
        uses: actions/checkout@v4

      - name: JDK 설치
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '17'

      - name: JDK, Gradle 캐시
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Java 빌드
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: AWS 인증
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TESTBED }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TESTBED }}
          aws-region: ap-northeast-2

      - name: ECR 인증
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 301591718339 # AWS 계정의 ID

      - name: 이미지 업로드
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/cicd-demo:testbed-${{ github.sha }}

  argocd:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: 아르고 CD 레포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          repository: imsosleepy/argocd
          token: ${{ secrets.argocd_pat }}
          path: .argocd-repo

      - name: 아르고 CD 레포지토리 이미지 태그 변경 사항 업데이트
        working-directory: .argocd-repo
        run: |
          yq -i '.deploy.test.imageTag = "testbed-${{ github.sha }}"' deploy/test/values.yaml

          git config --local user.name "daniel kim"
          git config --local user.email "kimdongha15@gmail.com"

          git add deploy/test/values.yaml
          MSG=$(echo "${{github.event.head_commit.message}}" | tr -d '"')
          git commit --allow-empty -m "$MSG" -m 'ref: https://github.com/${{ github.repository }}/commit/${{ github.sha }}'
          git push --force

